{"version":3,"sources":["webpack:///./app/components/TodoTextInput/style.css?71e8","webpack:///./app/components/TodoList/style.css?14c4","webpack:///./app/containers/TodoApp/style.css","webpack:///./app/constants/todos.ts","webpack:///./app/models/TodoModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/constants/stores.ts","webpack:///./app/stores/createStore.ts","webpack:///./app/containers/Root/index.tsx","webpack:///./app/components/TodoTextInput/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/TodoItem/index.tsx","webpack:///./app/components/TodoList/index.tsx","webpack:///./app/components/Footer/index.tsx","webpack:///./app/containers/TodoApp/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx","webpack:///./app/components/TodoItem/style.css?4c11","webpack:///./app/components/Footer/style.css?30f7"],"names":["module","exports","TodoFilter","text","completed","this","id","TodoModel","generateId","nextId","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","history","STORE_TODO","STORE_ROUTER","TODO_FILTER_TYPES","ALL","ACTIVE","COMPLETED","TODO_FILTER_TITLES","TODO_FILTER_LOCATION_HASH","todoStore","routerStore","renderDevTool","render","className","props","children","context","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","state","classes","editing","type","autoFocus","placeholder","onBlur","onChange","onKeyDown","handleSave","length","handleDoubleClick","handleToggleCheckbox","undefined","checked","updateTodo","handleClickDeleteButton","element","onDoubleClick","onClick","handleToggleAll","preventDefault","renderToggleAll","completedCount","key","actions","renderTodoCount","activeCount","itemWord","renderFilterLink","title","onChangeFilter","selectedFilter","style","cursor","renderClearButton","onClearCompleted","handleFilter","router","currentHash","location","hash","nextHash","replace","componentWillMount","checkLocationChange","componentWillReceiveProps","nextProps","nextContext","Object","keys","Number","find","getFilteredTodo","activeTodos","completedTodos","filteredTodos","footer","TodoApp","App","Router","Switch","Route","path","component","rootStore","document","getElementById"],"mappings":"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","file":"app.56f85d568711f878bd42.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1LCq9\",\"edit\":\"_2TStV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_1MAoA\",\"normal\":\"l9hMg\",\"editing\":\"_2LE8Z\",\"edit\":\"_3IEu8\",\"view\":\"cswuJ\",\"toggle\":\"_1euYG\",\"completed\":\"_1VEnC\",\"destroy\":\"_3_fjc\",\"toggleAll\":\"_1L1bM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"WBAC2\"};","export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\n","import { History } from 'history';\nimport { TodoModel } from 'app/models';\nimport { TodoStore } from './TodoStore';\nimport { RouterStore } from './RouterStore';\nimport { STORE_TODO, STORE_ROUTER } from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore\n  };\n}\n","import * as React from 'react';\n\nexport class Root extends React.Component<any, any> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.props.children}\n        {this.renderDevTool()}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\n\nexport interface TodoTextInputProps {\n  text?: string;\n  placeholder?: string;\n  newTodo?: boolean;\n  editing?: boolean;\n  onSave: (text: string) => any;\n}\n\nexport interface TodoTextInputState {\n  text: string;\n}\n\nexport class TodoTextInput extends React.Component<\n  TodoTextInputProps,\n  TodoTextInputState\n> {\n  constructor(props?: TodoTextInputProps, context?: any) {\n    super(props, context);\n    this.state = {\n      text: this.props.text || ''\n    };\n  }\n\n  private handleSubmit = (e) => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: '' });\n      }\n    }\n  };\n\n  private handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  private handleBlur = (e) => {\n    const text = e.target.value.trim();\n    if (!this.props.newTodo) {\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const classes = classNames(\n      {\n        [style.edit]: this.props.editing,\n        [style.new]: this.props.newTodo\n      },\n      style.normal\n    );\n\n    return (\n      <input\n        className={classes}\n        type=\"text\"\n        autoFocus\n        placeholder={this.props.placeholder}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default TodoTextInput;\n","import * as React from 'react';\nimport { TodoTextInput } from 'app/components/TodoTextInput';\nimport { TodoModel } from 'app/models/TodoModel';\n\nexport interface HeaderProps {\n  addTodo: (todo: Partial<TodoModel>) => any;\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  private handleSave = (text: string) => {\n    if (text.length) {\n      this.props.addTodo({ text });\n    }\n  };\n\n  render() {\n    return (\n      <header>\n        <h1>Todos</h1>\n        <TodoTextInput\n          newTodo\n          onSave={this.handleSave}\n          placeholder=\"What needs to be done?\"\n        />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { TodoTextInput } from 'app/components/TodoTextInput';\nimport { TodoModel } from 'app/models/TodoModel';\nimport * as style from './style.css';\n\nexport interface TodoActions {\n  editTodo: (id: number, data: Partial<TodoModel>) => any;\n  deleteTodo: (id: number) => any;\n}\n\nexport interface TodoProps extends TodoActions {\n  todo: TodoModel;\n}\n\nexport interface TodoState {\n  editing: boolean;\n}\n\nexport class TodoItem extends React.Component<TodoProps, TodoState> {\n  constructor(props?: TodoProps, context?: any) {\n    super(props, context);\n    this.state = { editing: false };\n  }\n\n  private handleDoubleClick = (e: React.SyntheticEvent<any>) => {\n    this.setState({ editing: true });\n  };\n\n  private handleToggleCheckbox = (e: React.SyntheticEvent<any>) => {\n    const { todo } = this.props;\n    const target = e.target as any;\n    if (\n      target &&\n      target.checked !== undefined &&\n      target.checked !== todo.completed\n    ) {\n      this.updateTodo({ completed: target.checked });\n    }\n  };\n\n  private handleClickDeleteButton = (e: React.SyntheticEvent<any>) => {\n    const { todo, deleteTodo } = this.props;\n    deleteTodo(todo.id);\n  };\n\n  private updateTodo = (data: Partial<TodoModel>) => {\n    const { todo } = this.props;\n    if (data.text !== undefined && data.text.trim().length === 0) {\n      this.props.deleteTodo(todo.id);\n    } else {\n      this.props.editTodo(todo.id, data);\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const { todo } = this.props;\n\n    const element = this.state.editing ? (\n      <TodoTextInput\n        text={todo.text}\n        editing={this.state.editing}\n        onSave={(text) => this.updateTodo({ text })}\n      />\n    ) : (\n      <div className={style.view}>\n        <input\n          className={style.toggle}\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={this.handleToggleCheckbox}\n        />\n\n        <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n\n        <button\n          className={style.destroy}\n          onClick={this.handleClickDeleteButton}\n        />\n      </div>\n    );\n\n    const classes = classNames({\n      [style.completed]: todo.completed,\n      [style.editing]: this.state.editing,\n      [style.normal]: !this.state.editing\n    });\n\n    return <li className={classes}>{element}</li>;\n  }\n}\n\nexport default TodoItem;\n","import * as React from 'react';\nimport { TodoItem, TodoActions } from 'app/components/TodoItem';\nimport { TodoModel } from 'app/models/TodoModel';\nimport * as style from './style.css';\n\nexport interface TodoListProps extends TodoActions {\n  todos: TodoModel[];\n  completeAll: () => any;\n}\n\nexport interface TodoListState {}\n\nexport class TodoList extends React.Component<TodoListProps, TodoListState> {\n  constructor(props?: TodoListProps, context?: any) {\n    super(props, context);\n  }\n\n  private handleToggleAll = (e: React.SyntheticEvent<any>) => {\n    e.preventDefault();\n    this.props.completeAll();\n  };\n\n  renderToggleAll() {\n    const { todos } = this.props;\n    const completedCount = todos.length;\n    if (todos.length > 0) {\n      return (\n        <input\n          className={style.toggleAll}\n          type=\"checkbox\"\n          checked={completedCount === todos.length}\n          onChange={this.handleToggleAll}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { todos, ...actions } = this.props;\n    return (\n      <section className={style.main}>\n        {this.renderToggleAll()}\n        <ul className={style.normal}>\n          {todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} {...actions} />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default TodoList;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\nimport {\n  TodoFilter,\n  TODO_FILTER_TITLES,\n  TODO_FILTER_TYPES\n} from 'app/constants';\n\nexport interface FooterProps {\n  filter: TodoFilter;\n  activeCount: number;\n  completedCount: number;\n  onChangeFilter: (filter: TodoFilter) => any;\n  onClearCompleted: () => any;\n}\n\nexport interface FooterState {\n  /* empty */\n}\n\nexport class Footer extends React.Component<FooterProps, FooterState> {\n  renderTodoCount() {\n    const { activeCount } = this.props;\n    const itemWord = activeCount === 1 ? 'item' : 'items';\n\n    return (\n      <span className={style.count}>\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n    );\n  }\n\n  renderFilterLink(filter: TodoFilter) {\n    const title = TODO_FILTER_TITLES[filter];\n    const { filter: selectedFilter, onChangeFilter } = this.props;\n    const className = classNames({\n      [style.selected]: filter === selectedFilter\n    });\n\n    return (\n      <a\n        className={className}\n        style={{ cursor: 'pointer' }}\n        onClick={() => onChangeFilter(filter)}\n      >\n        {title}\n      </a>\n    );\n  }\n\n  renderClearButton() {\n    const { completedCount, onClearCompleted } = this.props;\n    if (completedCount > 0) {\n      return (\n        <button className={style.clearCompleted} onClick={onClearCompleted} />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <footer className={style.normal}>\n        {this.renderTodoCount()}\n        <ul className={style.filters}>\n          {TODO_FILTER_TYPES.map((filter) => (\n            <li key={filter} children={this.renderFilterLink(filter)} />\n          ))}\n        </ul>\n        {this.renderClearButton()}\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { Header } from 'app/components/Header';\nimport { TodoList } from 'app/components/TodoList';\nimport { Footer } from 'app/components/Footer';\nimport { TodoStore, RouterStore } from 'app/stores';\nimport {\n  STORE_TODO,\n  STORE_ROUTER,\n  TODO_FILTER_LOCATION_HASH,\n  TodoFilter\n} from 'app/constants';\n\nexport interface TodoAppProps extends RouteComponentProps<any> {\n  /** MobX Stores will be injected via @inject() **/\n  // [STORE_ROUTER]: RouterStore;\n  // [STOURE_TODO]: TodoStore;\n}\n\nexport interface TodoAppState {\n  filter: TodoFilter;\n}\n\n@inject(STORE_TODO, STORE_ROUTER)\n@observer\nexport class TodoApp extends React.Component<TodoAppProps, TodoAppState> {\n  constructor(props: TodoAppProps, context: any) {\n    super(props, context);\n    this.state = { filter: TodoFilter.ALL };\n  }\n\n  componentWillMount() {\n    this.checkLocationChange();\n  }\n\n  componentWillReceiveProps(nextProps: TodoAppProps, nextContext: any) {\n    this.checkLocationChange();\n  }\n\n  checkLocationChange() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const filter = Object.keys(TODO_FILTER_LOCATION_HASH)\n      .map((key) => Number(key) as TodoFilter)\n      .find(\n        (filter) => TODO_FILTER_LOCATION_HASH[filter] === router.location.hash\n      );\n    this.setState({ filter });\n  }\n\n  private handleFilter = (filter: TodoFilter) => {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const currentHash = router.location.hash;\n    const nextHash = TODO_FILTER_LOCATION_HASH[filter];\n    if (currentHash !== nextHash) {\n      router.replace(nextHash);\n    }\n  };\n\n  getFilteredTodo(filter: TodoFilter) {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    switch (filter) {\n      case TodoFilter.ACTIVE:\n        return todoStore.activeTodos;\n      case TodoFilter.COMPLETED:\n        return todoStore.completedTodos;\n      default:\n        return todoStore.todos;\n    }\n  }\n\n  render() {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    const { children } = this.props;\n    const { filter } = this.state;\n    const filteredTodos = this.getFilteredTodo(filter);\n\n    const footer = todoStore.todos.length && (\n      <Footer\n        filter={filter}\n        activeCount={todoStore.activeTodos.length}\n        completedCount={todoStore.completedTodos.length}\n        onClearCompleted={todoStore.clearCompleted}\n        onChangeFilter={this.handleFilter}\n      />\n    );\n\n    return (\n      <div className={style.normal}>\n        <Header addTodo={todoStore.addTodo} />\n        <TodoList\n          todos={filteredTodos}\n          completeAll={todoStore.completeAll}\n          deleteTodo={todoStore.deleteTodo}\n          editTodo={todoStore.editTodo}\n        />\n        {footer}\n        {children}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Router, Route, Switch } from 'react-router';\nimport { Root } from 'app/containers/Root';\nimport { TodoApp } from 'app/containers/TodoApp';\n\n// render react DOM\nexport const App = hot(({ history }) => (\n  <Root>\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\" component={TodoApp} />\n      </Switch>\n    </Router>\n  </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createBrowserHistory } from 'history';\nimport { TodoModel } from 'app/models';\nimport { createStores } from 'app/stores';\nimport { App } from 'app';\n\n// default fixtures for TodoStore\nconst defaultTodos = [\n  new TodoModel('Use Mobx'),\n  new TodoModel('Use React', true)\n];\n\n// prepare MobX stores\nconst history = createBrowserHistory();\nconst rootStore = createStores(history, defaultTodos);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3Ivjf\",\"toggle\":\"gyYcA\",\"destroy\":\"_6oXTL\",\"edit\":\"Dlke2\",\"editing\":\"atkUq _3Ivjf\",\"view\":\"R2I1d\",\"completed\":\"_2d4Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_11G5b\",\"filters\":\"_2Rdg5\",\"selected\":\"KA4tP\",\"count\":\"_2aiYj\",\"clearCompleted\":\"_2VhED\"};"],"sourceRoot":""}