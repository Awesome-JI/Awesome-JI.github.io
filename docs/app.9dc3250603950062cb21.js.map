{"version":3,"sources":["webpack:///./app/components/TodoTextInput/style.css?71e8","webpack:///./app/components/TodoList/style.css?14c4","webpack:///./app/containers/TodoApp/style.css","webpack:///./app/containers/Course/style.css","webpack:///./app/containers/CourseList/style.css","webpack:///./app/constants/todos.ts","webpack:///./app/models/TodoModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/stores/CourseStore.ts","webpack:///./app/constants/stores.ts","webpack:///./app/stores/createStore.ts","webpack:///./app/containers/Root/index.tsx","webpack:///./app/components/TodoTextInput/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/TodoItem/index.tsx","webpack:///./app/components/TodoList/index.tsx","webpack:///./app/components/Footer/index.tsx","webpack:///./app/containers/TodoApp/index.tsx","webpack:///./app/containers/Course/index.tsx","webpack:///./app/containers/CourseList/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx","webpack:///./app/components/TodoItem/style.css?4c11","webpack:///./app/components/Footer/style.css?30f7"],"names":["module","exports","TodoFilter","text","completed","this","id","TodoModel","generateId","nextId","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","history","initData","courses","length","syncData","console","log","fetch","response","json","STORE_TODO","STORE_ROUTER","STORE_COURSE","TODO_FILTER_TYPES","ALL","ACTIVE","COMPLETED","TODO_FILTER_TITLES","TODO_FILTER_LOCATION_HASH","todoStore","routerStore","courseStore","props","context","renderDevTool","getDerivedStateFromProps","state","render","className","children","Root","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","classes","editing","type","autoFocus","placeholder","onBlur","onChange","onKeyDown","handleSave","handleDoubleClick","handleToggleCheckbox","undefined","checked","updateTodo","handleClickDeleteButton","element","onDoubleClick","onClick","handleToggleAll","preventDefault","renderToggleAll","completedCount","key","actions","renderTodoCount","activeCount","itemWord","renderFilterLink","title","onChangeFilter","selectedFilter","style","cursor","renderClearButton","onClearCompleted","handleFilter","router","currentHash","location","hash","nextHash","replace","componentWillMount","checkLocationChange","componentWillReceiveProps","nextProps","nextContext","Object","keys","Number","find","getFilteredTodo","activeTodos","completedTodos","filteredTodos","footer","TodoApp","match","params","Course","course","CourseList","App","Router","Switch","Route","exact","path","component","rootStore","document","getElementById"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,IAAM,SAAS,KAAO,W,mBCAxCD,EAAOC,QAAU,CAAC,KAAO,SAAS,OAAS,QAAQ,QAAU,SAAS,KAAO,SAAS,KAAO,QAAQ,OAAS,SAAS,UAAY,SAAS,QAAU,SAAS,UAAY,W,mBCA3KD,EAAOC,QAAU,CAAC,OAAS,U,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,U,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,W,iDCDfC,E,ydCmBG,EAjBf,WAKE,WAAYC,EAAcC,QAAA,IAAAA,OAAA,GACxBC,KAAKC,GAAKC,EAAUC,aACpBH,KAAKF,KAAOA,EACZE,KAAKD,UAAYA,EAOrB,OAHS,EAAAI,WAAP,WACE,OAAOH,KAAKI,UAFP,EAAAA,OAAS,EATJ,GAAX,a,oDACW,GAAX,a,0DAYH,EAfA,G,ooBCCA,aACE,WAAYC,GAAZ,WAiBA,KAAAC,QAAU,SAACC,GACT,EAAKC,MAAMC,KAAK,IAAI,EAAUF,EAAKT,KAAMS,EAAKR,aAIhD,KAAAW,SAAW,SAACT,EAAYU,GACtB,EAAKH,MAAQ,EAAKA,MAAMI,IAAI,SAACC,GAS3B,OARIA,EAAKZ,KAAOA,IACe,kBAAlBU,EAAKZ,YACdc,EAAKd,UAAYY,EAAKZ,WAEA,iBAAbY,EAAKb,OACde,EAAKf,KAAOa,EAAKb,OAGde,KAKX,KAAAC,WAAa,SAACb,GACZ,EAAKO,MAAQ,EAAKA,MAAMO,OAAO,SAACF,GAAS,OAAAA,EAAKZ,KAAOA,KAIvD,KAAAe,YAAc,WACZ,EAAKR,MAAQ,EAAKA,MAAMI,IAAI,SAACC,GAAS,cAAMA,GAAI,CAAEd,WAAW,OAI/D,KAAAkB,eAAiB,WACf,EAAKT,MAAQ,EAAKA,MAAMO,OAAO,SAACF,GAAS,OAACA,EAAKd,aA/C/CC,KAAKQ,MAAQH,EAiDjB,OA3CE,sBAAI,0BAAW,C,IAAf,WACE,OAAOL,KAAKQ,MAAMO,OAAO,SAACF,GAAS,OAACA,EAAKd,a,gCAI3C,sBAAI,6BAAc,C,IAAlB,WACE,OAAOC,KAAKQ,MAAMO,OAAO,SAACF,GAAS,OAAAA,EAAKd,a,gCAT9B,GAAX,a,gBAAyBmB,Q,4BAG1B,GADC,W,mFAMD,GADC,W,sFAMD,GADC,S,uDAMD,GADC,S,wDAgBD,GADC,S,0DAMD,GADC,S,2DAMD,GADC,S,8DAIH,EAnDA,G,4TCGA,cACE,WAAYC,GAAZ,MACE,cAAO,K,OACHA,IACF,EAAKA,QAAU,+BAAqBA,EAAS,I,EAGnD,OAPiC,OAOjC,EAPA,CAAiC,e,8vDCHjC,aACE,wBAQA,KAAAC,SAAW,+C,wDACmB,IAAxBpB,KAAKqB,QAAQC,OAAb,MACF,GAAMtB,KAAKuB,Y,OAAX,S,iCAKJ,KAAAA,SAAW,+C,yDAEQ,OADjBC,QAAQC,IAAI,qBACK,GAAMC,MAAM,uB,OACd,OADTC,EAAW,SACjB,EAAA3B,KAAe,GAAM2B,EAASC,Q,cAA9B,EAAKP,QAAU,SACfG,QAAQC,IAAI,eAAKzB,KAAKqB,U,UAlBtBrB,KAAKqB,QAAU,GAmEnB,OA/Dc,GAAX,a,gBAA2BH,Q,8BAG5B,GADC,S,wDAQD,GADC,S,wDAsDH,EArEA,GCHaW,EAAa,OACbC,EAAe,SACfC,EAAe,ULF5B,SAAYlC,GACV,iBACA,uBACA,6BAHF,CAAYA,MAAU,KAMf,IAAMmC,EAAoB,CAC/BnC,EAAWoC,IACXpC,EAAWqC,OACXrC,EAAWsC,WAGAC,IAAkB,MAC5BvC,EAAWoC,KAAM,MAClB,EAACpC,EAAWqC,QAAS,SACrB,EAACrC,EAAWsC,WAAY,Y,GAGbE,IAAyB,MACnCxC,EAAWoC,KAAM,IAClB,EAACpC,EAAWqC,QAAS,UACrB,EAACrC,EAAWsC,WAAY,a,OMdGhB,E,EACrBmB,EACAC,EACAC,E,ymECFR,cACE,WAAYC,EAAYC,G,OACtB,YAAMD,EAAOC,IAAQ,KAyBzB,OA3B0B,OAKxB,YAAAC,cAAA,aAOa,EAAAC,yBAAb,SAAsCH,EAAOI,G,8FAG3C,OAFML,EAAcC,EAAMV,GAC1BP,QAAQC,IAAIe,GACZ,GAAMA,EAAYpB,Y,cAAlB,S,UAGF,YAAA0B,OAAA,WAEE,OADAtB,QAAQC,IAAI,eAEV,uBAAKsB,UAAU,aACZ/C,KAAKyC,MAAMO,SACXhD,KAAK2C,kBAvBDM,EAAI,GADhB,YAAOlB,G,wCACKkB,GAAb,CAA0B,a,kWCQ1B,cAIE,WAAYR,EAA4BC,GAAxC,MACE,YAAMD,EAAOC,IAAQ,K,OAMf,EAAAQ,aAAe,SAACC,GACtB,IAAMrD,EAAOqD,EAAEC,OAAOC,MAAMC,OACZ,KAAZH,EAAEI,QACJ,EAAKd,MAAMe,OAAO1D,GACd,EAAK2C,MAAMgB,SACb,EAAKC,SAAS,CAAE5D,KAAM,OAKpB,EAAA6D,aAAe,SAACR,GACtB,EAAKO,SAAS,CAAE5D,KAAMqD,EAAEC,OAAOC,SAGzB,EAAAO,WAAa,SAACT,GACpB,IAAMrD,EAAOqD,EAAEC,OAAOC,MAAMC,OACvB,EAAKb,MAAMgB,SACd,EAAKhB,MAAMe,OAAO1D,IAtBpB,EAAK+C,MAAQ,CACX/C,KAAM,EAAK2C,MAAM3C,MAAQ,I,EA+C/B,OAtDmC,OAgCjC,YAAAgD,OAAA,W,MACQe,EAAU,IAAU,MAErB,QAAa7D,KAAKyC,MAAMqB,QACzB,EAAC,OAAY9D,KAAKyC,MAAMgB,Q,GAE1B,UAGF,OACE,yBACEV,UAAWc,EACXE,KAAK,OACLC,WAAS,EACTC,YAAajE,KAAKyC,MAAMwB,YACxBZ,MAAOrD,KAAK6C,MAAM/C,KAClBoE,OAAQlE,KAAK4D,WACbO,SAAUnE,KAAK2D,aACfS,UAAWpE,KAAKkD,gBAIxB,EAtDA,CAAmC,a,2UCJnC,0E,OACU,EAAAmB,WAAa,SAACvE,GAChBA,EAAKwB,QACP,EAAKmB,MAAMnC,QAAQ,CAAER,KAAI,K,EAgB/B,OAnB4B,OAO1B,YAAAgD,OAAA,WACE,OACE,8BACE,mCACA,gBAAC,EAAa,CACZW,SAAO,EACPD,OAAQxD,KAAKqE,WACbJ,YAAY,6BAKtB,EAnBA,CAA4B,a,oVCO5B,eACE,WAAYxB,EAAmBC,GAA/B,MACE,YAAMD,EAAOC,IAAQ,K,OAIf,EAAA4B,kBAAoB,SAACnB,GAC3B,EAAKO,SAAS,CAAEI,SAAS,KAGnB,EAAAS,qBAAuB,SAACpB,GACtB,IAAAtC,EAAA,QAAAA,KACFuC,EAASD,EAAEC,OAEfA,QACmBoB,IAAnBpB,EAAOqB,SACPrB,EAAOqB,UAAY5D,EAAKd,WAExB,EAAK2E,WAAW,CAAE3E,UAAWqD,EAAOqB,WAIhC,EAAAE,wBAA0B,SAACxB,GAC3B,cAAEtC,EAAA,EAAAA,MACRC,EADc,EAAAA,YACHD,EAAKZ,KAGV,EAAAyE,WAAa,SAAC/D,GACZ,IAAAE,EAAA,QAAAA,UACU2D,IAAd7D,EAAKb,MAAkD,IAA5Ba,EAAKb,KAAKwD,OAAOhC,OAC9C,EAAKmB,MAAM3B,WAAWD,EAAKZ,IAE3B,EAAKwC,MAAM/B,SAASG,EAAKZ,GAAIU,GAE/B,EAAK+C,SAAS,CAAEI,SAAS,KA/BzB,EAAKjB,MAAQ,CAAEiB,SAAS,G,EAqE5B,OAxE8B,QAqC5B,YAAAhB,OAAA,W,MAAA,OACUjC,EAAA,WAAAA,KAEF+D,EAAU5E,KAAK6C,MAAMiB,QACzB,gBAAC,EAAa,CACZhE,KAAMe,EAAKf,KACXgE,QAAS9D,KAAK6C,MAAMiB,QACpBN,OAAQ,SAAC1D,GAAS,SAAK4E,WAAW,CAAE5E,KAAI,OAG1C,uBAAKiD,UAAW,SACd,yBACEA,UAAW,UACXgB,KAAK,WACLU,QAAS5D,EAAKd,UACdoE,SAAUnE,KAAKuE,uBAGjB,yBAAOM,cAAe7E,KAAKsE,mBAAoBzD,EAAKf,MAEpD,0BACEiD,UAAW,WACX+B,QAAS9E,KAAK2E,2BAKdd,EAAU,IAAU,MACvB,cAAkBhD,EAAKd,UACxB,EAAC,YAAgBC,KAAK6C,MAAMiB,QAC5B,EAAC,YAAgB9D,KAAK6C,MAAMiB,Q,IAG9B,OAAO,sBAAIf,UAAWc,GAAUe,IAEpC,EAxEA,CAA8B,a,m3BCP9B,eACE,WAAYnC,EAAuBC,GAAnC,MACE,YAAMD,EAAOC,IAAQ,K,OAGf,EAAAqC,gBAAkB,SAAC5B,GACzBA,EAAE6B,iBACF,EAAKvC,MAAMzB,e,EA+Bf,OAtC8B,QAU5B,YAAAiE,gBAAA,WACU,IAAAzE,EAAA,WAAAA,MACF0E,EAAiB1E,EAAMc,OAC7B,GAAId,EAAMc,OAAS,EACjB,OACE,yBACEyB,UAAW,aACXgB,KAAK,WACLU,QAASS,IAAmB1E,EAAMc,OAClC6C,SAAUnE,KAAK+E,mBAMvB,YAAAjC,OAAA,WACE,IAAM,aAAEtC,EAAA,EAAAA,MAAO,kBACf,OACE,2BAASuC,UAAW,SACjB/C,KAAKiF,kBACN,sBAAIlC,UAAW,WACZvC,EAAMI,IAAI,SAACC,GAAS,OACnB,gBAAC,GAAQ,IAACsE,IAAKtE,EAAKZ,GAAIY,KAAMA,GAAUuE,SAMpD,EAtCA,CAA8B,a,oVCS9B,4B,+CAoDA,OApD4B,QAC1B,YAAAC,gBAAA,WACU,IAAAC,EAAA,WAAAA,YACFC,EAA2B,IAAhBD,EAAoB,OAAS,QAE9C,OACE,wBAAMvC,UAAW,UACf,8BAASuC,GAAe,M,IAAgBC,E,UAK9C,YAAAC,iBAAA,SAAiBzE,G,MACT0E,EAAQrD,EAAmBrB,GAC3B,aAAE,IAAAA,OAAwB2E,EAAA,EAAAA,eAC1B3C,EAAY,IAAU,MACzB,aAAiBhC,IAAW4E,E,IAG/B,OACE,qBACE5C,UAAWA,EACX6C,MAAO,CAAEC,OAAQ,WACjBf,QAAS,WAAM,OAAAY,EAAe3E,KAE7B0E,IAKP,YAAAK,kBAAA,WACQ,iBAAEZ,EAAA,EAAAA,eAAgBa,EAAA,EAAAA,iBACxB,GAAIb,EAAiB,EACnB,OACE,0BAAQnC,UAAW,kBAAsB+B,QAASiB,KAKxD,YAAAjD,OAAA,sBACE,OACE,0BAAQC,UAAW,WAChB/C,KAAKqF,kBACN,sBAAItC,UAAW,YACZf,EAAkBpB,IAAI,SAACG,GAAW,OACjC,sBAAIoE,IAAKpE,EAAQiC,SAAU,EAAKwC,iBAAiBzE,QAGpDf,KAAK8F,sBAId,EApDA,CAA4B,a,mwBCM5B,eACE,WAAYrD,EAAqBC,GAAjC,MACE,YAAMD,EAAOC,IAAQ,K,OAuBf,EAAAsD,aAAe,SAACjF,GACtB,IAAMkF,EAAS,EAAKxD,MAAMX,GACpBoE,EAAcD,EAAOE,SAASC,KAC9BC,EAAWhE,EAA0BtB,GACvCmF,IAAgBG,GAClBJ,EAAOK,QAAQD,IA3BjB,EAAKxD,MAAQ,CAAE9B,OAAQlB,EAAWoC,K,EAyEtC,OA5E6B,QAM3B,YAAAsE,mBAAA,WACEvG,KAAKwG,uBAGP,YAAAC,0BAAA,SAA0BC,EAAyBC,GACjD3G,KAAKwG,uBAGP,YAAAA,oBAAA,WAEE,IAAMP,EAASjG,KAAKyC,MAAMX,GACpBf,EAAS6F,OAAOC,KAAKxE,GACxBzB,IAAI,SAACuE,GAAQ,OAAA2B,OAAO3B,KACpB4B,KACC,SAAChG,GAAW,OAAAsB,EAA0BtB,KAAYkF,EAAOE,SAASC,OAEtEpG,KAAK0D,SAAS,CAAE3C,OAAM,KAYxB,YAAAiG,gBAAA,SAAgBjG,GACd,IAAMuB,EAAYtC,KAAKyC,MAAMZ,GAC7B,OAAQd,GACN,KAAKlB,EAAWqC,OACd,OAAOI,EAAU2E,YACnB,KAAKpH,EAAWsC,UACd,OAAOG,EAAU4E,eACnB,QACE,OAAO5E,EAAU9B,QAIvB,YAAAsC,OAAA,WACE,IAAMR,EAAYtC,KAAKyC,MAAMZ,GACrBmB,EAAA,WAAAA,SACAjC,EAAA,WAAAA,OACFoG,EAAgBnH,KAAKgH,gBAAgBjG,GAErCqG,EAAS9E,EAAU9B,MAAMc,QAC7B,gBAAC,GAAM,CACLP,OAAQA,EACRuE,YAAahD,EAAU2E,YAAY3F,OACnC4D,eAAgB5C,EAAU4E,eAAe5F,OACzCyE,iBAAkBzD,EAAUrB,eAC5ByE,eAAgB1F,KAAKgG,eAIzB,OACE,uBAAKjD,UAAW6C,EAAA,QACd,gBAAC,GAAM,CAACtF,QAASgC,EAAUhC,UAC3B,gBAAC,GAAQ,CACPE,MAAO2G,EACPnG,YAAasB,EAAUtB,YACvBF,WAAYwB,EAAUxB,WACtBJ,SAAU4B,EAAU5B,WAErB0G,EACApE,IAxEIqE,EAAO,IAFnB,YAAOxF,EAAYC,GACnB,I,yCACYuF,GAAb,CAA6B,a,4wBCG7B,eACE,WAAY5E,EAAoBC,GAAhC,MACE,YAAMD,EAAOC,IAAQ,KA0Bf,EAAAsD,aAAe,SAACjF,GACtB,IAAMkF,EAAS,EAAKxD,MAAMX,GACpBoE,EAAcD,EAAOE,SAASC,KAC9BC,EAAWhE,EAA0BtB,GACvCmF,IAAgBG,GAClBJ,EAAOK,QAAQD,IA9BjB,IAAMpG,EAAKwC,EAAM6E,MAAMC,OAAOtH,G,OAC9B,EAAK4C,MAAQ,CACX9B,OAAQlB,EAAWoC,IACnBhC,GAAIA,G,EAoEV,OA1E4B,QAU1B,YAAAsG,mBAAA,WACEvG,KAAKwG,uBAGP,YAAAC,0BAAA,SAA0BC,EAAwBC,GAChD3G,KAAKwG,uBAGP,YAAAA,oBAAA,WACE,IAAMP,EAASjG,KAAKyC,MAAMX,GACpBf,EAAS6F,OAAOC,KAAKxE,GACxBzB,IAAI,SAACuE,GAAQ,OAAA2B,OAAO3B,KACpB4B,KACC,SAAChG,GAAW,OAAAsB,EAA0BtB,KAAYkF,EAAOE,SAASC,OAEtEpG,KAAK0D,SAAS,CAAE3C,OAAM,KAYxB,YAAAiG,gBAAA,SAAgBjG,GACd,IAAMuB,EAAYtC,KAAKyC,MAAMZ,GAC7B,OAAQd,GACN,KAAKlB,EAAWqC,OACd,OAAOI,EAAU2E,YACnB,KAAKpH,EAAWsC,UACd,OAAOG,EAAU4E,eACnB,QACE,OAAO5E,EAAU9B,QAIvB,YAAAsC,OAAA,WACE,IAAMR,EAAYtC,KAAKyC,MAAMZ,GACvB,aAAYyF,GAAV,EAAAtE,SAAU,EAAAsE,OACVvG,EAAA,WAAAA,OAaFkF,GAZgBjG,KAAKgH,gBAAgBjG,GAE5BuB,EAAU9B,MAAMc,QAC7B,gBAAC,GAAM,CACLP,OAAQA,EACRuE,YAAahD,EAAU2E,YAAY3F,OACnC4D,eAAgB5C,EAAU4E,eAAe5F,OACzCyE,iBAAkBzD,EAAUrB,eAC5ByE,eAAgB1F,KAAKgG,eAIVhG,KAAKyC,MAAMX,IAG1B,OAFAN,QAAQC,IAAIwE,GAGV,uBAAKlD,UAAW,WACbuE,EAAMC,OAAOtH,KAtETuH,EAAM,IAFlB,YAAO3F,EAAYC,GACnB,I,yCACY0F,GAAb,CAA4B,a,4wBCA5B,eACE,WAAY/E,EAAwBC,GAApC,MACE,YAAMD,EAAOC,IAAQ,KA0Bf,EAAAsD,aAAe,SAACjF,GACtB,IAAMkF,EAAS,EAAKxD,MAAMX,GACpBoE,EAAcD,EAAOE,SAASC,KAC9BC,EAAWhE,EAA0BtB,GACvCmF,IAAgBG,GAClBJ,EAAOK,QAAQD,IA9BjB,IAAMpG,EAAKwC,EAAM6E,MAAMC,OAAOtH,G,OAC9B,EAAK4C,MAAQ,CACX9B,OAAQlB,EAAWoC,IACnBhC,GAAIA,G,EAwEV,OA9EgC,QAU9B,YAAAsG,mBAAA,WACEvG,KAAKwG,uBAGP,YAAAC,0BAAA,SAA0BC,EAA4BC,GACpD3G,KAAKwG,uBAGP,YAAAA,oBAAA,WACE,IAAMP,EAASjG,KAAKyC,MAAMX,GACpBf,EAAS6F,OAAOC,KAAKxE,GACxBzB,IAAI,SAACuE,GAAQ,OAAA2B,OAAO3B,KACpB4B,KACC,SAAChG,GAAW,OAAAsB,EAA0BtB,KAAYkF,EAAOE,SAASC,OAEtEpG,KAAK0D,SAAS,CAAE3C,OAAM,KAYxB,YAAAiG,gBAAA,SAAgBjG,GACd,IAAMuB,EAAYtC,KAAKyC,MAAMZ,GAC7B,OAAQd,GACN,KAAKlB,EAAWqC,OACd,OAAOI,EAAU2E,YACnB,KAAKpH,EAAWsC,UACd,OAAOG,EAAU4E,eACnB,QACE,OAAO5E,EAAU9B,QAIvB,YAAAsC,OAAA,WACE,IAAMR,EAAYtC,KAAKyC,MAAMZ,GACvBW,EAAcxC,KAAKyC,MAAMV,GAEzB,aACEhB,GADA,EAAAiC,SAAU,EAAAsE,MACV,WAAAvG,QAaFkF,GAZgBjG,KAAKgH,gBAAgBjG,GAE5BuB,EAAU9B,MAAMc,QAC7B,gBAAC,GAAM,CACLP,OAAQA,EACRuE,YAAahD,EAAU2E,YAAY3F,OACnC4D,eAAgB5C,EAAU4E,eAAe5F,OACzCyE,iBAAkBzD,EAAUrB,eAC5ByE,eAAgB1F,KAAKgG,eAIVhG,KAAKyC,MAAMX,IAG1B,OAFAN,QAAQC,IAAIwE,GAGV,uBAAKlD,UAAW,WACbP,EAAYnB,QAAQT,IAAI,SAAA6G,GACvB,OAAOA,EAAOxH,OAzEXyH,EAAU,IAFtB,YAAO7F,EAAYC,EAAcC,GACjC,I,yCACY2F,GAAb,CAAgC,aCrBnBC,GAAM,cAAI,SAAC,G,IAACxG,EAAA,EAAAA,QAAa,OACpC,gBAAC,EAAI,KACH,gBAACyG,EAAA,EAAM,CAACzG,QAASA,GACf,gBAAC0G,EAAA,EAAM,KACL,gBAACC,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAW,KACjC,gBAACH,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,WAAWC,UAAW,KACxC,gBAACH,EAAA,EAAK,CAACE,KAAK,eAAeC,UAAW,U,iNCNxC,GAAe,CACnB,IAAI,EAAU,YACd,IAAI,EAAU,aAAa,IAIvB,GAAU,cACVC,IXTuB/G,EWSE,GXRvBmB,EAAY,IAAI,EWQgB,IXPhCC,EAAc,IAAI,EAAYpB,GAC9BqB,EAAc,IAAI,GACjB,EAAP,IACGX,GAAaS,EACd,EAACR,GAAeS,EAChB,EAACR,GAAeS,E,GWKpB,SACE,gBAAC,IAAQ,MAAK0F,IACZ,gBAACP,GAAG,CAACxG,QAAS,MAEhBgH,SAASC,eAAe,U,kBCtB1BzI,EAAOC,QAAU,CAAC,OAAS,SAAS,OAAS,QAAQ,QAAU,SAAS,KAAO,QAAQ,QAAU,eAAe,KAAO,QAAQ,UAAY,W,kBCA3ID,EAAOC,QAAU,CAAC,OAAS,SAAS,QAAU,SAAS,SAAW,QAAQ,MAAQ,SAAS,eAAiB,Y","file":"app.9dc3250603950062cb21.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1LCq9\",\"edit\":\"_2TStV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_1MAoA\",\"normal\":\"l9hMg\",\"editing\":\"_2LE8Z\",\"edit\":\"_3IEu8\",\"view\":\"cswuJ\",\"toggle\":\"_1euYG\",\"completed\":\"_1VEnC\",\"destroy\":\"_3_fjc\",\"toggleAll\":\"_1L1bM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"WBAC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"L7pgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_2EZFb\"};","export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","import {observable, computed, action, toJS} from 'mobx';\nimport {act} from 'react-dom/test-utils';\n\nexport class CourseStore {\n  constructor() {\n    this.courses = [];\n    // this.todos = fixtures;\n  }\n\n  @observable public courses: Array<any>;\n\n  @action\n  initData = async () => {\n    if (this.courses.length === 0) {\n      await this.syncData();\n    }\n  };\n\n  @action\n  syncData = async () => {\n    console.log('sync courses data');\n    const response = await fetch(`/data/courses.json`);\n    this.courses = await response.json();\n    console.log(toJS(this.courses));\n    // this.setState({ data: json });\n\n  };\n\n  /*@computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };*/\n}\n\nexport default CourseStore;\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\nexport const STORE_COURSE = 'course';\n","import { History } from 'history';\nimport { TodoModel } from 'app/models';\nimport { TodoStore } from './TodoStore';\nimport { RouterStore } from './RouterStore';\nimport { CourseStore } from './CourseStore';\nimport { STORE_TODO, STORE_ROUTER, STORE_COURSE } from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const courseStore = new CourseStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSE]: courseStore,\n  };\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\n\nimport {STORE_COURSE, TodoFilter} from 'app/constants';\nimport {CourseStore} from 'app/stores';\n\n\n@inject(STORE_COURSE)\nexport class Root extends React.Component<any, any> {\n  constructor(props: any, context: any) {\n    super(props, context);\n  }\n\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools/>;\n    }\n  }\n\n  static async getDerivedStateFromProps(props, state) {\n    const courseStore = props[STORE_COURSE] as CourseStore;\n    console.log(courseStore);\n    await courseStore.initData();\n  }\n\n  render() {\n    console.log('render root');\n    return (\n      <div className=\"container\">\n        {this.props.children}\n        {this.renderDevTool()}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\n\nexport interface TodoTextInputProps {\n  text?: string;\n  placeholder?: string;\n  newTodo?: boolean;\n  editing?: boolean;\n  onSave: (text: string) => any;\n}\n\nexport interface TodoTextInputState {\n  text: string;\n}\n\nexport class TodoTextInput extends React.Component<\n  TodoTextInputProps,\n  TodoTextInputState\n> {\n  constructor(props?: TodoTextInputProps, context?: any) {\n    super(props, context);\n    this.state = {\n      text: this.props.text || ''\n    };\n  }\n\n  private handleSubmit = (e) => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: '' });\n      }\n    }\n  };\n\n  private handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  private handleBlur = (e) => {\n    const text = e.target.value.trim();\n    if (!this.props.newTodo) {\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const classes = classNames(\n      {\n        [style.edit]: this.props.editing,\n        [style.new]: this.props.newTodo\n      },\n      style.normal\n    );\n\n    return (\n      <input\n        className={classes}\n        type=\"text\"\n        autoFocus\n        placeholder={this.props.placeholder}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default TodoTextInput;\n","import * as React from 'react';\nimport { TodoTextInput } from 'app/components/TodoTextInput';\nimport { TodoModel } from 'app/models/TodoModel';\n\nexport interface HeaderProps {\n  addTodo: (todo: Partial<TodoModel>) => any;\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  private handleSave = (text: string) => {\n    if (text.length) {\n      this.props.addTodo({ text });\n    }\n  };\n\n  render() {\n    return (\n      <header>\n        <h1>Todos</h1>\n        <TodoTextInput\n          newTodo\n          onSave={this.handleSave}\n          placeholder=\"What needs to be done?\"\n        />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { TodoTextInput } from 'app/components/TodoTextInput';\nimport { TodoModel } from 'app/models/TodoModel';\nimport * as style from './style.css';\n\nexport interface TodoActions {\n  editTodo: (id: number, data: Partial<TodoModel>) => any;\n  deleteTodo: (id: number) => any;\n}\n\nexport interface TodoProps extends TodoActions {\n  todo: TodoModel;\n}\n\nexport interface TodoState {\n  editing: boolean;\n}\n\nexport class TodoItem extends React.Component<TodoProps, TodoState> {\n  constructor(props?: TodoProps, context?: any) {\n    super(props, context);\n    this.state = { editing: false };\n  }\n\n  private handleDoubleClick = (e: React.SyntheticEvent<any>) => {\n    this.setState({ editing: true });\n  };\n\n  private handleToggleCheckbox = (e: React.SyntheticEvent<any>) => {\n    const { todo } = this.props;\n    const target = e.target as any;\n    if (\n      target &&\n      target.checked !== undefined &&\n      target.checked !== todo.completed\n    ) {\n      this.updateTodo({ completed: target.checked });\n    }\n  };\n\n  private handleClickDeleteButton = (e: React.SyntheticEvent<any>) => {\n    const { todo, deleteTodo } = this.props;\n    deleteTodo(todo.id);\n  };\n\n  private updateTodo = (data: Partial<TodoModel>) => {\n    const { todo } = this.props;\n    if (data.text !== undefined && data.text.trim().length === 0) {\n      this.props.deleteTodo(todo.id);\n    } else {\n      this.props.editTodo(todo.id, data);\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const { todo } = this.props;\n\n    const element = this.state.editing ? (\n      <TodoTextInput\n        text={todo.text}\n        editing={this.state.editing}\n        onSave={(text) => this.updateTodo({ text })}\n      />\n    ) : (\n      <div className={style.view}>\n        <input\n          className={style.toggle}\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={this.handleToggleCheckbox}\n        />\n\n        <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n\n        <button\n          className={style.destroy}\n          onClick={this.handleClickDeleteButton}\n        />\n      </div>\n    );\n\n    const classes = classNames({\n      [style.completed]: todo.completed,\n      [style.editing]: this.state.editing,\n      [style.normal]: !this.state.editing\n    });\n\n    return <li className={classes}>{element}</li>;\n  }\n}\n\nexport default TodoItem;\n","import * as React from 'react';\nimport { TodoItem, TodoActions } from 'app/components/TodoItem';\nimport { TodoModel } from 'app/models/TodoModel';\nimport * as style from './style.css';\n\nexport interface TodoListProps extends TodoActions {\n  todos: TodoModel[];\n  completeAll: () => any;\n}\n\nexport interface TodoListState {}\n\nexport class TodoList extends React.Component<TodoListProps, TodoListState> {\n  constructor(props?: TodoListProps, context?: any) {\n    super(props, context);\n  }\n\n  private handleToggleAll = (e: React.SyntheticEvent<any>) => {\n    e.preventDefault();\n    this.props.completeAll();\n  };\n\n  renderToggleAll() {\n    const { todos } = this.props;\n    const completedCount = todos.length;\n    if (todos.length > 0) {\n      return (\n        <input\n          className={style.toggleAll}\n          type=\"checkbox\"\n          checked={completedCount === todos.length}\n          onChange={this.handleToggleAll}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { todos, ...actions } = this.props;\n    return (\n      <section className={style.main}>\n        {this.renderToggleAll()}\n        <ul className={style.normal}>\n          {todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} {...actions} />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default TodoList;\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\nimport {\n  TodoFilter,\n  TODO_FILTER_TITLES,\n  TODO_FILTER_TYPES\n} from 'app/constants';\n\nexport interface FooterProps {\n  filter: TodoFilter;\n  activeCount: number;\n  completedCount: number;\n  onChangeFilter: (filter: TodoFilter) => any;\n  onClearCompleted: () => any;\n}\n\nexport interface FooterState {\n  /* empty */\n}\n\nexport class Footer extends React.Component<FooterProps, FooterState> {\n  renderTodoCount() {\n    const { activeCount } = this.props;\n    const itemWord = activeCount === 1 ? 'item' : 'items';\n\n    return (\n      <span className={style.count}>\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n    );\n  }\n\n  renderFilterLink(filter: TodoFilter) {\n    const title = TODO_FILTER_TITLES[filter];\n    const { filter: selectedFilter, onChangeFilter } = this.props;\n    const className = classNames({\n      [style.selected]: filter === selectedFilter\n    });\n\n    return (\n      <a\n        className={className}\n        style={{ cursor: 'pointer' }}\n        onClick={() => onChangeFilter(filter)}\n      >\n        {title}\n      </a>\n    );\n  }\n\n  renderClearButton() {\n    const { completedCount, onClearCompleted } = this.props;\n    if (completedCount > 0) {\n      return (\n        <button className={style.clearCompleted} onClick={onClearCompleted} />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <footer className={style.normal}>\n        {this.renderTodoCount()}\n        <ul className={style.filters}>\n          {TODO_FILTER_TYPES.map((filter) => (\n            <li key={filter} children={this.renderFilterLink(filter)} />\n          ))}\n        </ul>\n        {this.renderClearButton()}\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { Header } from 'app/components/Header';\nimport { TodoList } from 'app/components/TodoList';\nimport { Footer } from 'app/components/Footer';\nimport { TodoStore, RouterStore } from 'app/stores';\nimport {\n  STORE_TODO,\n  STORE_ROUTER,\n  TODO_FILTER_LOCATION_HASH,\n  TodoFilter\n} from 'app/constants';\n\nexport interface TodoAppProps extends RouteComponentProps<any> {\n  /** MobX Stores will be injected via @inject() **/\n  // [STORE_ROUTER]: RouterStore;\n  // [STOURE_TODO]: TodoStore;\n}\n\nexport interface TodoAppState {\n  filter: TodoFilter;\n}\n\n@inject(STORE_TODO, STORE_ROUTER)\n@observer\nexport class TodoApp extends React.Component<TodoAppProps, TodoAppState> {\n  constructor(props: TodoAppProps, context: any) {\n    super(props, context);\n    this.state = { filter: TodoFilter.ALL };\n  }\n\n  componentWillMount() {\n    this.checkLocationChange();\n  }\n\n  componentWillReceiveProps(nextProps: TodoAppProps, nextContext: any) {\n    this.checkLocationChange();\n  }\n\n  checkLocationChange() {\n    // console.log(1);\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const filter = Object.keys(TODO_FILTER_LOCATION_HASH)\n      .map((key) => Number(key) as TodoFilter)\n      .find(\n        (filter) => TODO_FILTER_LOCATION_HASH[filter] === router.location.hash\n      );\n    this.setState({ filter });\n  }\n\n  private handleFilter = (filter: TodoFilter) => {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const currentHash = router.location.hash;\n    const nextHash = TODO_FILTER_LOCATION_HASH[filter];\n    if (currentHash !== nextHash) {\n      router.replace(nextHash);\n    }\n  };\n\n  getFilteredTodo(filter: TodoFilter) {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    switch (filter) {\n      case TodoFilter.ACTIVE:\n        return todoStore.activeTodos;\n      case TodoFilter.COMPLETED:\n        return todoStore.completedTodos;\n      default:\n        return todoStore.todos;\n    }\n  }\n\n  render() {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    const { children } = this.props;\n    const { filter } = this.state;\n    const filteredTodos = this.getFilteredTodo(filter);\n\n    const footer = todoStore.todos.length && (\n      <Footer\n        filter={filter}\n        activeCount={todoStore.activeTodos.length}\n        completedCount={todoStore.completedTodos.length}\n        onClearCompleted={todoStore.clearCompleted}\n        onChangeFilter={this.handleFilter}\n      />\n    );\n\n    return (\n      <div className={style.normal}>\n        <Header addTodo={todoStore.addTodo} />\n        <TodoList\n          todos={filteredTodos}\n          completeAll={todoStore.completeAll}\n          deleteTodo={todoStore.deleteTodo}\n          editTodo={todoStore.editTodo}\n        />\n        {footer}\n        {children}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { Header } from 'app/components/Header';\nimport { TodoList } from 'app/components/TodoList';\nimport { Footer } from 'app/components/Footer';\nimport { TodoStore, RouterStore } from 'app/stores';\nimport {\n  STORE_TODO,\n  STORE_ROUTER,\n  TODO_FILTER_LOCATION_HASH,\n  TodoFilter\n} from 'app/constants';\n\ntype TParams =  { id: string };\n\nexport interface CourseProps extends RouteComponentProps<TParams> {\n  /** MobX Stores will be injected via @inject() **/\n  // [STORE_ROUTER]: RouterStore;\n  // [STORE_TODO]: TodoStore;\n}\n\nexport interface CourseState {\n  filter: TodoFilter;\n  id: string;\n}\n\n@inject(STORE_TODO, STORE_ROUTER)\n@observer\nexport class Course extends React.Component<CourseProps, CourseState> {\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    const id = props.match.params.id;\n    this.state = {\n      filter: TodoFilter.ALL,\n      id: id\n    };\n  }\n\n  componentWillMount() {\n    this.checkLocationChange();\n  }\n\n  componentWillReceiveProps(nextProps: CourseProps, nextContext: any) {\n    this.checkLocationChange();\n  }\n\n  checkLocationChange() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const filter = Object.keys(TODO_FILTER_LOCATION_HASH)\n      .map((key) => Number(key) as TodoFilter)\n      .find(\n        (filter) => TODO_FILTER_LOCATION_HASH[filter] === router.location.hash\n      );\n    this.setState({ filter });\n  }\n\n  private handleFilter = (filter: TodoFilter) => {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const currentHash = router.location.hash;\n    const nextHash = TODO_FILTER_LOCATION_HASH[filter];\n    if (currentHash !== nextHash) {\n      router.replace(nextHash);\n    }\n  };\n\n  getFilteredTodo(filter: TodoFilter) {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    switch (filter) {\n      case TodoFilter.ACTIVE:\n        return todoStore.activeTodos;\n      case TodoFilter.COMPLETED:\n        return todoStore.completedTodos;\n      default:\n        return todoStore.todos;\n    }\n  }\n\n  render() {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    const { children, match } = this.props;\n    const { filter } = this.state;\n    const filteredTodos = this.getFilteredTodo(filter);\n\n    const footer = todoStore.todos.length && (\n      <Footer\n        filter={filter}\n        activeCount={todoStore.activeTodos.length}\n        completedCount={todoStore.completedTodos.length}\n        onClearCompleted={todoStore.clearCompleted}\n        onChangeFilter={this.handleFilter}\n      />\n    );\n\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    console.log(router);\n\n    return (\n      <div className={style.normal}>\n        {match.params.id}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { Header } from 'app/components/Header';\nimport { TodoList } from 'app/components/TodoList';\nimport { Footer } from 'app/components/Footer';\nimport { TodoStore, RouterStore, CourseStore } from 'app/stores';\nimport {\n  STORE_TODO,\n  STORE_ROUTER,\n  TODO_FILTER_LOCATION_HASH,\n  TodoFilter, STORE_COURSE,\n} from 'app/constants';\n\ntype TParams =  { id: string };\n\nexport interface CourseListProps extends RouteComponentProps<TParams> {\n  /** MobX Stores will be injected via @inject() **/\n  // [STORE_ROUTER]: RouterStore;\n  // [STORE_TODO]: TodoStore;\n}\n\nexport interface CourseListState {\n  filter: TodoFilter;\n  id: string;\n}\n\n@inject(STORE_TODO, STORE_ROUTER, STORE_COURSE)\n@observer\nexport class CourseList extends React.Component<CourseListProps, CourseListState> {\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const id = props.match.params.id;\n    this.state = {\n      filter: TodoFilter.ALL,\n      id: id\n    };\n  }\n\n  componentWillMount() {\n    this.checkLocationChange();\n  }\n\n  componentWillReceiveProps(nextProps: CourseListProps, nextContext: any) {\n    this.checkLocationChange();\n  }\n\n  checkLocationChange() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const filter = Object.keys(TODO_FILTER_LOCATION_HASH)\n      .map((key) => Number(key) as TodoFilter)\n      .find(\n        (filter) => TODO_FILTER_LOCATION_HASH[filter] === router.location.hash\n      );\n    this.setState({ filter });\n  }\n\n  private handleFilter = (filter: TodoFilter) => {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const currentHash = router.location.hash;\n    const nextHash = TODO_FILTER_LOCATION_HASH[filter];\n    if (currentHash !== nextHash) {\n      router.replace(nextHash);\n    }\n  };\n\n  getFilteredTodo(filter: TodoFilter) {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    switch (filter) {\n      case TodoFilter.ACTIVE:\n        return todoStore.activeTodos;\n      case TodoFilter.COMPLETED:\n        return todoStore.completedTodos;\n      default:\n        return todoStore.todos;\n    }\n  }\n\n  render() {\n    const todoStore = this.props[STORE_TODO] as TodoStore;\n    const courseStore = this.props[STORE_COURSE] as CourseStore;\n\n    const { children, match } = this.props;\n    const { filter } = this.state;\n    const filteredTodos = this.getFilteredTodo(filter);\n\n    const footer = todoStore.todos.length && (\n      <Footer\n        filter={filter}\n        activeCount={todoStore.activeTodos.length}\n        completedCount={todoStore.completedTodos.length}\n        onClearCompleted={todoStore.clearCompleted}\n        onChangeFilter={this.handleFilter}\n      />\n    );\n\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    console.log(router);\n\n    return (\n      <div className={style.normal}>\n        {courseStore.courses.map(course=>{\n          return course.id;\n        })}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {hot} from 'react-hot-loader/root';\nimport {Router, Route, Switch} from 'react-router';\nimport {Root} from 'app/containers/Root';\nimport {TodoApp} from 'app/containers/TodoApp';\nimport {Course} from 'app/containers/Course';\nimport {CourseList} from 'app/containers/CourseList';\n\n// render react DOM\nexport const App = hot(({history}) => (\n  <Root>\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={TodoApp}/>\n        <Route exact path=\"/courses\" component={CourseList}/>\n        <Route path=\"/courses/:id\" component={Course}/>\n      </Switch>\n    </Router>\n  </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createHashHistory } from 'history';\nimport { TodoModel } from 'app/models';\nimport { createStores } from 'app/stores';\nimport { App } from 'app';\n\n// default fixtures for TodoStore\nconst defaultTodos = [\n  new TodoModel('Use Mobx'),\n  new TodoModel('Use React', true)\n];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, defaultTodos);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3Ivjf\",\"toggle\":\"gyYcA\",\"destroy\":\"_6oXTL\",\"edit\":\"Dlke2\",\"editing\":\"atkUq _3Ivjf\",\"view\":\"R2I1d\",\"completed\":\"_2d4Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_11G5b\",\"filters\":\"_2Rdg5\",\"selected\":\"KA4tP\",\"count\":\"_2aiYj\",\"clearCompleted\":\"_2VhED\"};"],"sourceRoot":""}